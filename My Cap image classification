import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
%matplotlib inline
#using pandas to read csv file
data=pd.read_csv("mnist_test.csv")
#viewing column heads
data.head()
#extracting data and viewing up close
a=data.iloc[0,1:].values
#reshaping into suitable size
a=a.reshape(28,28).astype('uint8')
plt.imshow(a)
a=data.iloc[4,1:].values
a=a.reshape(28,28).astype('uint8')
plt.imshow(a)
#separating label amd data values
df_x=data.iloc[:,1:]
df_y=data.iloc[:,0]
#creating test \ train variables
x_train,x_test,y_train,y_test=train_test_split(df_x,df_y,test_size=0.2,random_state=4)
#check data
x_train.head()
y_train.head()
#calling rf classifier
rf=RandomForestClassifier(n_estimators=100)
#fitting the data
rf.fit(x_train,y_train)
#prediction on test data
pred=rf.predict(x_test)
pred
#check prediction accuracy
s=y_test.values

#cal no of correctly predicted values
count=0
for i in range(len(pred)):
   if pred[i]==s[i]:
    count=count+1
    
count

#total values to be predicted
len(pred)
#accuracy
1901/2000*100
